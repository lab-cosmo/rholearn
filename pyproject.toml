[project]
name = "rholearn"
version = "0.1.0"
description = "Metatensor-torch framework for learning real-space electronic densities decomposed on a basis, and global electronic density of states."
authors = [
    {name = "Joseph W. Abbott", email = "joseph.william.abbott@gmail.com"},
    {name = "Wei Bin How", email = "weibin.how@epfl.ch"},
    {name = "Guillaume Fraux", email = "guillaume.fraux@epfl.ch"},
]
dependencies = [
    "ase",
    "numpy",
    "pytest",
    "pyyaml",
    "py3dmol",
    "scikit-learn",
    "scipy",
    "tox",

    # Dependencies from the COSMO (+ friends) stack
    "chemfiles",
    "chemiscope",
    "metatensor[torch]",
    "featomic-torch >= 0.6.0.rc1",
    "vesin",

    # Extra dependencies
    "cube_toolz @ git+https://github.com/funkymunkycool/Cube-Toolz",
]
keywords = ["machine learning", "electronic densities", "density of states"]

[project.urls]
repository = "https://github.com/lab-cosmo/rholearn"
author = "https://github.com/jwa7"

[build-system]
requires = ["rust", "cmake", "setuptools>=40.8.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = [
    "rholearn.aims_interface",
    "rholearn.doslearn",
    "rholearn.options",
    "rholearn.rholearn",
    "rholearn.utils",
]
package-data = {"rholearn" = ["rholearn/options/*.yaml"]}

[project.scripts]
rholearn_run_scf = "rholearn.aims_interface.scf:rholearn_run_scf"
rholearn_process_scf = "rholearn.aims_interface.scf:rholearn_process_scf"
rholearn_setup_ri_fit = "rholearn.aims_interface.ri_fit:setup_ri_fit"
rholearn_run_ri_fit = "rholearn.aims_interface.ri_fit:run_ri_fit"
rholearn_process_ri_fit = "rholearn.aims_interface.ri_fit:process_ri_fit"
rholearn_run_ri_rebuild = "rholearn.aims_interface.ri_rebuild:run_ri_rebuild"
rholearn_train = "rholearn.rholearn.train:train"
rholearn_eval = "rholearn.rholearn.eval:eval"
doslearn_run_scf = "rholearn.aims_interface.scf:doslearn_run_scf"
doslearn_process_scf = "rholearn.aims_interface.scf:doslearn_process_scf"
doslearn_train = "rholearn.doslearn.train:train"
doslearn_eval = "rholearn.doslearn.eval:eval"