# Define a seed. This is used to shuffle frame indices for cross-validation splits and
# initialize model parameters
SEED: 42


# Rascaline SphericalExpansion hyperparameters
DESCRIPTOR_HYPERS:
  descriptor_type: null
  angular_cutoff: null
  use_pca: null

# For example:
# DESCRIPTOR_HYPERS:
#   descriptor_type: rho2
#   spherical_expansion_hypers:
#     cutoff:
#       radius: 3.0
#       smoothing:
#         type: ShiftedCosine
#         width: 0.1
#     density:
#       type: Gaussian
#       width: 0.3
#       scaling:
#         type: Willatt2018
#         exponent: 7
#         rate: 1
#         scale: 2.0
#     basis:
#       type: TensorProduct
#       max_angular: 5
#       radial:
#         type: Gto
#         max_radial: 7

# Pretraining with analytical weights
PRETRAIN: false
PRETRAIN_ARGS: {}

# NN Layers
ARCHITECTURE:
  linear:
    - Linear: {}

# Freeze parameters of certain modules
FREEZE_MODULES: {}

# Standardize targets
STANDARDIZE_TARGETS: false

# Load an existing model for fine-tuning
LOAD_MODEL:
  path: null
  add_modules: {}

# Options for the training and validation loss functions
LOSS_FN:
  train: 
    solver: nonorthogonal_via_c
    truncated: false
    conditioner: null
  val: 
    solver: nonorthogonal_via_c
    truncated: false
    conditioner: null

# Value to cutoff the overlap matrix (Angstrom)
OVERLAP_CUTOFF: null

# Threshold value to sparsify the overlap matrix
OVERLAP_THRESHOLD: null

# Optimizer
OPTIMIZER: Adam
OPTIMIZER_ARGS:
  lr: 0.1

# Scheduler
SCHEDULER: null
SCHEDULER_ARGS: {}
MIN_LR: 0.000001

# Training options
TRAIN:
  device: cpu
  dtype: float64  # important for model accuracy
  batch_size: null
  n_epochs: 501  # number of total epochs to run
  restart_epoch: null  # epoch of last saved checkpoint, or null for no restart
  val_interval: 50  # validate every x intervals
  log_interval: 50  # epoch interval at which to log metrics
  checkpoint_interval: 50  # save model and optimizer state every x intervals

# Evaluation options
EVAL:
  eval_epoch: best
  subset_size: null
  target_type: [ri, scf]  # evaluate against "scf" or "ri" reference, or both
  stm: 
    mode: null
    options: {}


# Run an overfitting experiment. This uses a single (and the same) structure in the
# training and validation datasets.
OVERFIT: false